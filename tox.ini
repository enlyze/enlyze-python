[tox]
requires =
    tox>=4.2
env_list =
    py311
    py310

[testenv]
extras =
    test
parallel_show_output = true
pass_env =
    HYPOTHESIS_PROFILE
    PYENCHANT_LIBRARY_PATH
commands =
    pytest -n auto --cov=enlyze --cov-report=term-missing tests/

[testenv:tox-fmt]
skip_install = true
deps =
    tox-ini-fmt
commands =
    tox-ini-fmt tox.ini

[testenv:pyproject-fmt]
skip_install = true
deps =
    pyproject-fmt
commands =
    pyproject-fmt pyproject.toml

[testenv:docs-fmt]
skip_install = true
deps =
    docstrfmt
commands =
    docstrfmt --extend-exclude docs/installation.rst docs/ src/ *.rst

[testenv:mypy]
deps =
    mypy
commands =
    mypy --strict src/

[testenv:docs]
deps =
    sphinx
    sphinx-rtd-theme
    sphinx-tabs
    sphinxcontrib-spelling
commands =
    sphinx-build -W docs/ docs/_build/html -b html {posargs}

[testenv:docs-linkcheck]
commands =
    sphinx-build -W docs/ docs/_build/linkcheck -b linkcheck {posargs}
base = docs

[testenv:docs-spellcheck]
commands =
    sphinx-build -W docs/ docs/_build/spellcheck -b spelling {posargs}
base = docs

[testenv:docs-coverage]
commands =
    sphinx-build -W docs/ docs/_build/coverage -b coverage {posargs}
base = docs

[testenv:docs-autobuild]
deps =
    {[testenv:docs]deps}
    watchdog
commands =
    watchmedo shell-command -W -i docs/_build -R -p '*.rst;*.py' -c  '{[testenv:docs]commands}' docs/ src/

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage --skip-private --skip-file-doc --skip-init src/ {posargs}

[testenv:flake8]
skip_install = true
deps =
    flake8
commands =
    flake8 src/ tests/

[testenv:black]
skip_install = true
deps =
    black
commands =
    black --check --diff --color src/ tests/ docs/

[testenv:isort]
skip_install = true
deps =
    isort
commands =
    isort --check --diff src/ tests/

[testenv:bandit]
skip_install = true
deps =
    bandit
commands =
    bandit -r src/

[testenv:requirements]
description = Compile requirements.txt for all run-time and dev dependencies.
skip_install = true
deps =
    pip-tools
commands =
    pip-compile --upgrade --all-extras --resolver=backtracking -o requirements.txt pyproject.toml

[testenv:dev]
description = Setup dev environment via `tox --devenv .venv -r -e dev`
package = editable
extras =
    docs
    lint
    test

[gh-actions]
python =
    3.10: py310
    3.11: py311
